!function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";n.r(t);t.default=class{constructor(e=!1){"boolean"!=typeof e&&(e=!1),this._debug=e,this._idIncrementor=5678*Math.floor(Math.random()*Math.floor(256)),this._regularEvents=[],this._customEvents={},this.version="0.9.0"}destroy(){this._debug&&console.log("Events.destroy"),this.removeAllEvents(),Object.keys(this).forEach(e=>{delete this[e]})}addEvent(e,t,n,r=t,s=!1){if(null==e||null==t||null==n)return this._debug&&console.error("Events.addEvent","Missing mandatory arguments"),!1;const o=()=>{this._debug&&console.error("Events.addEvent","Wrong type for argument")};return"string"!=typeof e||"object"!=typeof t||"function"!=typeof n||null!=r&&"object"!=typeof r||null!=s&&"object"!=typeof s&&"boolean"!=typeof s?(o(),!1):(this._debug&&console.log("Events.addEvent",e,t,n,r,s),n=n.bind(r),this._regularEvents.push({id:this._idIncrementor,element:t,eventName:e,scope:r,callback:n,options:s}),t.addEventListener(e,n,s),this._idIncrementor++)}removeEvent(e){if(null==e)return this._debug&&console.error("Events.removeEvent","Missing mandatory arguments"),!1;if("number"!=typeof e)return(()=>{this._debug&&console.error("Events.removeEvent","Wrong type for argument")})(),!1;this._debug&&console.log("Events.removeEvent",e);let t=!1;for(let n=this._regularEvents.length-1;n>=0;--n)this._regularEvents[n].id===e&&(t=!0,this._clearRegularEvent(n));return t}removeAllEvents(){this._debug&&console.log("Events.removeAllEvents");let e=!1,t=this._regularEvents.length>0;for(let e=this._regularEvents.length-1;e>=0;--e)this._clearRegularEvent(e);return 0===this._regularEvents.length&&t&&(e=!0),e}_clearRegularEvent(e){if(null==e)return this._debug&&console.error("Events._clearRegularEvent","Missing mandatory argument"),!1;if("number"!=typeof e)return(()=>{this._debug&&console.error("Events._clearRegularEvent","Wrong type for argument")})(),!1;if(this._debug&&console.log("Events._clearRegularEvent",e),this._regularEvents[e]){let t=this._regularEvents[e];return t.element.removeEventListener(t.eventName,t.callback,t.options),this._regularEvents.splice(e,1),!0}}subscribe(e,t,n=!1){if(null==e||null==t)return this._debug&&console.error("Events.subscribe","Missing mandatory arguments"),!1;const r=()=>{this._debug&&console.error("Events.subscribe","Wrong type for argument")};return"string"!=typeof e||"function"!=typeof t||null!=n&&"boolean"!=typeof n?(r(),!1):(this._debug&&console.log("Events.subscribe",e,t,n),this._customEvents[e]||(this._customEvents[e]=[]),this._customEvents[e].push({id:this._idIncrementor,name:e,os:n,callback:t}),this._idIncrementor++)}unsubscribe(e){if(null==e)return this._debug&&console.log("Events.unsubscribe","Missing mandatory arguments"),!1;if("number"!=typeof e)return(()=>{this._debug&&console.error("Events.unsubscribe","Wrong type for argument")})(),!1;this._debug&&console.log("Events.unsubscribe",e);let t=!1,n=Object.keys(this._customEvents);for(let r=n.length-1;r>=0;--r){let s=this._customEvents[n[r]];for(let o=0;o<s.length;++o)if(s[o].id===e){this._debug&&console.log("Events.unsubscribe : subscription found\n",s[o],`\nSubscription n°${e} for ${s.name} has been removed`),t=!0,s.splice(o,1),0===s.length&&delete this._customEvents[n[r]];break}}return t}unsubscribeAllFor(e){if(null==e)return this._debug&&console.log("Events.unsubscribeAllFor","Missing mandatory arguments"),!1;if("string"!=typeof e)return(()=>{this._debug&&console.error("Events.unsubscribeAllFor","Wrong type for argument")})(),!1;this._debug&&console.log("Events.unsubscribeAllFor",e);let t=!1,n=Object.keys(this._customEvents);for(let r=0;r<n.length;++r)if(n[r]===e){let e=this._customEvents[n[r]];for(let s=e.length-1;s>=0;--s)t=!0,e.splice(s,1),0===e.length&&delete this._customEvents[n[r]]}return t}publish(e,t){if(null==e)return this._debug&&console.log("Events.publish","Missing mandatory arguments"),!1;const n=()=>{this._debug&&console.error("Events.unsubscribeAllFor","Wrong type for argument")};if("string"!=typeof e)return n(),!1;if(void 0!==t&&"object"!=typeof t)return n(),!1;this._debug&&console.log("Events.publish",e,t);let r=!1,s=Object.keys(this._customEvents);for(let n=0;n<s.length;++n)if(s[n]===e){r=!0;let o=this._customEvents[s[n]];for(let r=o.length-1;r>=0;--r)this._debug&&console.log(`Events.publish : fire callback for ${e}, subscription n°${o[r].id}`,o[r]),o[r].callback(t),o[r].os&&(this._debug&&console.log("Events.publish : remove subscription because one shot usage is done"),o.splice(r,1),0===o.length&&delete this._customEvents[s[n]])}return r}}}]);